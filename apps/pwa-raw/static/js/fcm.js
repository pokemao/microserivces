// 通过fcm发送消息
import {urlBase64ToUint8Array} from './base642U8Array.js';

if (Notification.permission === "default") {
  Notification.requestPermission().then((permission) => {
    if (permission === "granted") {
      console.log("有通知权限");
    } else {
      alert("请允许通知");
    }
  });
} else if (Notification.permission === "granted") {
  console.log("有通知权限");
} else {
  console.log("没有通知权限");
  alert("请允许通知");
}

navigator.serviceWorker.ready
.then(async function(registration) {
  // 判断当前网站是否已经注册了subscription
  const subscription = await registration.pushManager.getSubscription();
  if (subscription) {
    // 已经注册了subscription，直接返回
    console.log('已经注册的subscription', subscription);
    // subscription.unsubscribe().then(function(successful) {
    //   console.log('shao unsubscribe successful', successful);
    // })
    return subscription;
  }
  // 没有注册subscription，注册一个
  console.log('没有注册的subscription，注册一个');
  const response = await fetch('./vapidPublicKey');
  console.log('接口./vapidPublicKey返回的response', response);
  const vapidPublicKey = await response.text();
  console.log('接口./vapidPublicKey返回的vapidPublicKey', vapidPublicKey);
  // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet
  // urlBase64ToUint8Array() is defined in /tools.js
  const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey);
  console.log('接口./vapidPublicKey返回的convertedVapidKey', convertedVapidKey);
  // Otherwise, subscribe the user (userVisibleOnly allows to specify that we don't plan to
  // send notifications that don't have a visible effect for the user).
  console.log('注册一个subscription');
  try {
    return await registration.pushManager.subscribe({
      userVisibleOnly: true,
      applicationServerKey: convertedVapidKey
    })
  }catch(e) {
    console.log('registration.pushManager.subscribe error code: ', e.code,'message: ', e.message,'name: ', e.name);
    alert('注册一个subscription失败, 当前浏览器不支持fcm push notification');
  }
  return undefined
}).then(async function(subscription) {
  if(!subscription) {
    return;
  }
  console.log('注册得到的subscription', subscription);

  // 让server保存subscription的接口
  // Send the subscription details to the server using the Fetch API.
  // fetch('./register', {
  //   method: 'post',
  //   headers: {
  //     'Content-type': 'application/json'
  //   },
  //   body: JSON.stringify({
  //     subscription: subscription
  //   }),
  // });

  const doIt = document.getElementById('doIt')
  const fun = function() {
    const payload = document.getElementById('notification-payload').value;
    const delay = document.getElementById('notification-delay').value;
    const ttl = document.getElementById('notification-ttl').value;

    // Ask the server to send the client a notification (for testing purposes, in actual
    // applications the push notification is likely going to be generated by some event
    // in the server).

    fetch('./sendNotification', {
      method: 'post',
      headers: {
        'Content-type': 'application/json'
      },
      body: JSON.stringify({
        subscription: subscription,
        payload: payload,
        delay: delay,
        ttl: ttl,
      }),
    });
  };
  doIt.addEventListener('click', fun);

}).catch((e) => {
  console.log(e);
})

export {}
